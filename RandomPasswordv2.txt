#!/bin/bash


	###############################################################
	#	Copyright (c) 2018, D8 Services Ltd.  All rights reserved.  
	#											
	#	
	#	THIS SOFTWARE IS PROVIDED BY D8 SERVICES LTD. "AS IS" AND ANY
	#	EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	#	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	#	DISCLAIMED. IN NO EVENT SHALL D8 SERVICES LTD. BE LIABLE FOR ANY
	#	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	#	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	#	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	#	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	#	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	#	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	#
	# written by Tomos @ D8 Services Ltd Syd / HKG
	###############################################################
	#
	# cat Command brutally and braisenly stolen/utilised from the following chat on Github
	# https://gist.github.com/earthgecko/3089509
	# password expiry stolen from
	# https://www.jamf.com/jamf-nation/discussions/9559
	
# When Run this will update the password for <username> and update it to a random password
# How to Use
	###############################################################
	# Designed as use through Extension Attributes
	# Set the userName to the account name you want to randomise
	# Then set the number of days to randomise the password as.
	# The Jamf Server will run this Extension attribute at minimum
	# during the default "Update Inventory" policy. The default policy 
	# is every week meaning that a password will be randomised once 
	# every week. By using this Scipt we can check the last time the 
	# password was set and only alter it only if past the expiry date.
	#
	###############################################################

# Username to randomise the password
userName="test"
# Reset the Password when it is Over xx days old
passWDPolicy="90"

if id "$userName" >/dev/null 2>&1; then
	echo "Notice: User exists, continuing"
	passwordDateTime=$( dscl . read /Users/${userName} accountPolicyData | sed 1,2d | /usr/bin/xpath "/plist/dict/real[preceding-sibling::key='passwordLastSetTime'][1]/text()" 2> /dev/null | sed -e 's/\.[0-9]*//g' )
	((passwordAgeDays = ($(date +%s) - $passwordDateTime) / 86400 ))
	if [[ "$passwordAgeDays" -gt ${passWDPolicy} ]]; then
		newPass=`cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`
		#jamf changePassword -username ${userName} -password "${newPass}"
		sudo dscl . -passwd /Users/${userName} "${newPass}"
		echo "<result>${newPass}</result>"
	fi
fi
